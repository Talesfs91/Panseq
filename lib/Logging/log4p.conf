#log4p conf
#screen appender uses STDERR as default, set stderr to 0 to allow trapping STDERR from mummer

layout_format =  %d %p |  %F{1}:%L> %m %n

log4perl.logger											 	= INFO, LOG1
log4perl.appender.LOG1          				 			= Log::Log4perl::Appender::Screen
log4perl.appender.LOG1.stderr 								= 0
log4perl.appender.LOG1.Threshold 							= INFO
log4perl.appender.LOG1.mode      							= append
log4perl.appender.LOG1.layout    							= Log::Log4perl::Layout::PatternLayout
log4perl.appender.LOG1.layout.ConversionPattern 			= ${layout_format}

log4perl.logger.NovelRegionFinder             				= DEBUG, LOG2
log4perl.appender.LOG2           							= Log::Log4perl::Appender::File
log4perl.appender.LOG2.filename  							= sub{return novel_region_finder_file();}
log4perl.appender.LOG2.mode     							= append
log4perl.appender.LOG2.layout    							= Log::Log4perl::Layout::PatternLayout
log4perl.appender.LOG2.layout.ConversionPattern 			= ${layout_format}

log4perl.logger.MummerGPU             						= DEBUG, LOG3
log4perl.appender.LOG3           							= Log::Log4perl::Appender::File
log4perl.appender.LOG3.filename  							= sub{return mummer_gpu_file();}
log4perl.appender.LOG3.mode     							= append
log4perl.appender.LOG3.layout    							= Log::Log4perl::Layout::PatternLayout
log4perl.appender.LOG3.layout.ConversionPattern 			=${layout_format}

log4perl.logger.FileManipulation		          			= DEBUG, LOG7
log4perl.appender.LOG7           							= Log::Log4perl::Appender::File
log4perl.appender.LOG7.filename  							= sub{return file_manipulation_file();}
log4perl.appender.LOG7.mode     							= append
log4perl.appender.LOG7.layout    							= Log::Log4perl::Layout::PatternLayout
log4perl.appender.LOG7.layout.ConversionPattern 			=${layout_format}